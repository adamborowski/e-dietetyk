// Generated by CoffeeScript 1.6.3
(function() {
  Ext.define('app.view.AppView', {
    extend: 'Ext.container.Viewport',
    requires: ['app.view.HumanView', 'app.helpers.kinetic.StageWrapper', 'app.helpers.kinetic.ShapeWrapper', 'app.helpers.kinetic.GroupWrapper', 'app.view.human.Corps', 'app.view.human.Legs', 'app.view.human.Arm', 'app.view.human.Hand', 'app.view.human.Head'],
    constructor: function(config) {
      var body, mainLayer, me;
      Ext.applyIf(config, {
        layout: 'fit',
        items: [
          {
            xtype: 'panel',
            title: 'Users',
            layout: {
              type: 'vbox',
              align: 'stretch',
              pack: 'stretch'
            },
            items: [
              {
                flex: 2,
                xtype: 'kineticstage',
                itemId: 'stage',
                style: 'border: 1px solid #5fae32',
                margin: 10
              }, {
                xtype: 'form',
                defaults: {
                  margin: 20
                },
                items: [
                  {
                    xtype: 'slider',
                    itemId: 'weightInput',
                    fieldLabel: 'waga [kg]',
                    minValue: 30,
                    maxValue: 200,
                    width: 400,
                    listeners: {
                      change: {
                        fn: this.updateHander,
                        scope: this
                      }
                    }
                  }, {
                    xtype: 'slider',
                    itemId: 'heightInput',
                    fieldLabel: 'wzrost [cm]',
                    minValue: 140,
                    maxValue: 220,
                    width: 400,
                    listeners: {
                      change: {
                        fn: this.updateHander,
                        scope: this
                      }
                    }
                  }
                ]
              }
            ]
          }
        ]
      });
      this.callParent(arguments);
      mainLayer = this.down('#stage').mainLayer;
      this.body = body = Ext.create('app.view.human.Corps', {
        layoutX: 0,
        layoutY: 0,
        layoutWidth: 1,
        layoutHeight: 0.5,
        initialAttrs: {
          fill: 'green',
          strokeEnabled: false
        }
      });
      this.legs = Ext.create('app.view.human.Legs', {
        layoutX: 0,
        layoutY: 0.5,
        layoutWidth: 1,
        layoutHeight: 0.5,
        initialAttrs: {
          fill: 'orange',
          stroke: 'grey',
          strokeEnabled: false
        }
      });
      this.leftArm = Ext.create('app.view.human.Arm', {
        initialAttrs: {
          fill: 'gray',
          x: -105,
          y: -50,
          width: 90,
          height: 240,
          strokeEnabled: false
        }
      });
      this.rightArm = Ext.create('app.view.human.Arm', {
        initialAttrs: {
          fill: 'gray',
          x: 105,
          y: -50,
          scaleX: -1,
          width: 90,
          height: 240,
          strokeEnabled: false
        }
      });
      this.leftHand = Ext.create('app.view.human.Hand', {
        initialAttrs: {
          fill: 'yellow',
          x: 105,
          y: -50,
          width: 13,
          height: 13,
          strokeEnabled: false
        }
      });
      this.rightHand = Ext.create('app.view.human.Hand', {
        initialAttrs: {
          fill: 'yellow',
          x: 105,
          y: -50,
          width: 13,
          height: 13,
          strokeEnabled: false
        }
      });
      this.head = Ext.create('app.view.human.Head', {
        initialAttrs: {
          fill: '#ECCAB9',
          x: 0,
          y: -140,
          width: 90,
          height: 90,
          strokeEnabled: false
        }
      });
      this.group = mainLayer.add({
        wtype: 'group',
        layoutX: 500,
        layoutY: 300,
        layoutWidth: 200,
        layoutHeight: 500,
        relativeX: false,
        relativeY: false,
        relativeWidth: false,
        relativeHeight: false
      });
      this.group.add(this.legs);
      this.group.add(this.body);
      me = this;
      window.requestAnimationFrame(function() {
        return me.updateHander();
      });
    },
    updateHander: function() {
      this.body.setBodyDensity((this.down('#weightInput').getValue() - 70) / -400);
      this.legs.setBodyDensity((this.down('#weightInput').getValue() - 70) / -400);
      this.group.setLayoutWidth(Math.sqrt(this.down('#weightInput').getValue()) * 10);
      this.group.setLayoutHeight(Math.sqrt(this.down('#heightInput').getValue()) * 10);
      return this.group.invalidate();
    }
  });

}).call(this);

//# sourceMappingURL=AppView.map
